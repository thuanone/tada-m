module.exports = {
  'Security Report page': client => client
    .url(`${client.launch_url}${client.globals.proxyRoot}/registry/main/images/`)
    .waitForElementVisible('.registryTabSelect', 60000)
    .assert.containsText('.bx--tile:nth-child(3)', 'Images')
    .waitForElementVisible('.armada-table-wrapper[data-state="ready"]', 60000)
    .waitForElementVisible('.bx--search-input', 60000)
    .setValue('.bx--search-input', 'issues')
    .pause(1000)
    .ifElementExists('.armada-item-status--red a', () => client
      .click('.armada-item-status--red a')
      .pause(1000)
      .waitForElementVisible('.security-report', 60000)
      .waitForElementVisible('.bx--search-input', 60000)
      .setValue('.bx--search-input', 'active')
      .pause(1000)
      //  .assert.containsText('.armada-page-header-title', 'Security report')
      .getText('.bx--data-table-v2 tr[data-id^="CVE-"] td:nth-child(2)', result => {
        const policyId = result.value;
        const policyEl = `[data-id='${policyId}']`;
        return client
          .click(`${policyEl} .bx--table-expand-v2__button`)
          .pause(1000)
          .waitForElementVisible('.va-table-details', 10000)
          .assert.containsText('.va-table-details__header', 'Summary')
          .click(`${policyEl} .bx--overflow-menu`)
          .pause(1000)
          .waitForElementVisible('.bx--overflow-menu-options__option', 10000)
          .click('.bx--overflow-menu-options__btn')
          .pause(1000)
          .waitForElementVisible('.bx--modal.is-visible', 60000)
          .assert.containsText('.is-visible .bx--modal-header__heading', 'Create policy exemption')
          // create exemption
          .click('.is-visible.va-policy-settings-modal .bx--btn--primary')
          .pause(5000)
          .url(`${client.launch_url}${client.globals.proxyRoot}/registry/main/settings/`)
          .waitForElementVisible('.armada-table-wrapper[data-state="ready"]', 60000)
          .setValue('.bx--search-input', policyId)
          .pause(4000)
          .assert.elementPresent(policyEl)
          .click(`${policyEl} .bx--overflow-menu`)
          .pause(1000)
          .getLocationInView('.bx--overflow-menu-options__option:nth-child(2)')
          .waitForElementVisible('.bx--overflow-menu-options__option:nth-child(2)', 2000)
          .click('.bx--overflow-menu-options__option:nth-child(2)')
          .pause(1000)
          .waitForElementVisible('.bx--modal.is-visible', 10000)
          .assert.containsText('.is-visible .bx--modal-header__heading', 'Remove policy exemption')
          // delete exemption
          .click('.is-visible .bx--btn--danger--primary')
          .pause(1000)
          // .waitForElementNotPresent(policyEl, 60000)
          // .assert.elementNotPresent(policyEl)
          .click('.bx--table-toolbar .bx--btn--primary')
          .pause(1000)
          .waitForElementVisible('.bx--modal.is-visible', 60000)
          .setValue('#issue_id', policyId)
          .click('.is-visible.va-policy-settings-modal .bx--btn--primary')
          .pause(1000)
          .waitForElementVisible(policyEl, 60000)
          .assert.elementPresent(policyEl)
          .assert.containsText(`${policyEl} td:nth-child(2)`, '*/*/*')
          .click(`${policyEl} .bx--overflow-menu`)
          .pause(1000)
          .waitForElementVisible('.bx--overflow-menu-options__option', 10000)
          .click('.bx--overflow-menu-options__option:nth-child(2)')
          .pause(1000)
          .waitForElementVisible('.bx--modal.is-visible', 10000)
          // clean up
          .click('.is-visible .bx--btn--danger--primary');
      }), () => client),
};
